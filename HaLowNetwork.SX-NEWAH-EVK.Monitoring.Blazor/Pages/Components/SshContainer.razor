@using HaLowNetwork.SX_NEWAH_EVK.Monitoring.Blazor.Services
@using Renci.SshNet
<div class="console console-container">
    @for (int i = 0; i < _output.Count; i++)
    {
        <div>
            @{
                var result = _output[i];
            }

            @switch (result.ExitStatus)
            {
                case 0:
                    <div style="color: #fff">
                        <b>@Ssh.User@@@Ssh.Host #</b> @result.CommandText <br/> @((MarkupString)result.Result.Replace(Environment.NewLine,"<br />"))
                    </div>
                    break;
                default:
                    <div style="color: #a52834">
                        <b>@Ssh.User@@@Ssh.Host #</b> @result.CommandText <br/> @((MarkupString)result.Error.Replace(Environment.NewLine,"<br />"))
                    </div>

                    break;
            }

        </div>
    }

    <div class="console" @onkeydown="Enter" tabindex="0" >
        <b>@Ssh.User@@@Ssh.Host #</b> <input class="console console-input" @bind="_input"/><span @onclick="Send"  style="float: right">Send</span>
    </div>
    <div style="padding-top:15px;">
        <ConsoleSuggestComponent Text="Ping"></ConsoleSuggestComponent> <ConsoleSuggestComponent Text="Reboot"></ConsoleSuggestComponent>
    </div>
</div>
@code {

    [Parameter]
    public SshService Ssh { get; set; }

    private List<SshCommand> _output = new();
    private string _input = string.Empty;

    protected override void OnInitialized()
    {
    }

    private void Send()
    {
        var output = Ssh.UseCommand(_input);
        if (output == null)
            return;

        _output.Add(output);
        _input = string.Empty;
        StateHasChanged();
    }

    private void Enter(KeyboardEventArgs key)
    {
        if (key.Code == "Enter" || key.Code == "NumpadEnter")
        {
            try
            {
                Send();
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }
        }
        else
        {
            
        }
    }

}